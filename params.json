{"name":"PREP Pipeline: EEG-Clean-Tools","tagline":"Contains tools for EEG standardized preprocessing","body":"### Introduction to the PREP pipeline\r\nThe PREP pipeline is a standardized early-stage EEG processing pipeline that focuses on the identification of bad channels and the calculation of a robust average reference. PREP also has an extensive reporting facility. It is designed to be run in a completely automated way.\r\n\r\n## Requirements\r\nThe PREP pipeline relies on the MATLAB Signal Processing toolbox and EEGLAB, a freely-available MATLAB toolbox for processing EEG. EEG is available from  [http://scn.ucsd.edu/eeglab](http://scn.ucsd.edu/eeglab). PREP assumes that the EEG data is provided as an EEGLAB EEG structure and that channel locations are provided in the EEG.chanlocs structure.\r\n\r\n## Citing the PREP pipeline\r\nThe PREP pipeline is freely available under the GUN General Public License. \r\nPlease cite the following publication if using:  \r\n    Bigdely-Shamlo N, Mullen T, Kothe C, Su K-M and Robbins KA (2015)  \r\n    The PREP pipeline: standardized preprocessing for large-scale EEG analysis  \r\n    Front. Neuroinform. 9:16. doi: 10.3389/fninf.2015.00016  \r\n\r\n## Installation\r\nThe PREP pipeline can be run in two ways --- as a standalone toolbox or as an EEGLAB plugin. To run in standalone mode, simply download the PREP code, found the the EEG-Clean-Tools\r\n\r\n### PREP Overview\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n## Processing steps\r\n1.\tRemove line-noise without committing to a filtering strategy.\r\n2.\tRobustly reference the signal relative to an estimate of the “true” average reference.\r\n3.\tDetect and interpolate bad channels relative to this reference.\r\n4.\tRetain sufficient information to allow users to re-reference using another method or to undo interpolation of a particular channel.\r\n\r\n### PREP as an EEGLAB plugin\r\nYou can install PREP as an EEGLAB plugin by unzipping the ...  \r\n\r\n## Running the PREP pipeline \r\nLoad an EEG dataset to be processed using the Load dataset submenu under the File menu of EEGLAB.  The PREP pipeline \r\ncan be found under the Tools submenu:  \r\n\r\n\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"UA-66346771-1","note":"Don't delete this file! It's used internally to help with page regeneration."}